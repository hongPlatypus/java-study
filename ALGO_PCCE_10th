import java.util.Comparator;
import java.util.Arrays;

class ALGO_PCCE_10th {
    public static int[][] solution(int[][] data, String ext, int val_ext, String sort_by) {
    	int[][] tempAnswer = new int[data.length][];
        int removind=0,sortind=0; //제거할 index 찾기
                               //분류할 index찾기
        switch(ext){
            case "code":      break;
            case "date":  removind=1;    break;
            case "maximum": removind=2;  break;
            case "remain":  removind=3;  break;
            default:    break;
        }//switch end:ext 값에 따른 제거해낼 기준 찾기
        
        if(sort_by.equals("date")){
                sortind=1;
        }else if(sort_by.equals("maximum")){
                sortind=2;
        }else if(sort_by.equals("remain")){
                sortind=3;
        }else{
                sortind=0;
        }//if end:sort_by 값에 따라 분류해낼 기준 찾기
        
        
        final int removalIndex=removind;
        final int sortIndex = sortind;
        //2차원 배열로 오름차순-1 ext 기준에 따라 제거용
        Arrays.sort(data, Comparator.comparingInt((int[] o) -> o[removalIndex]));
        
        // val_ext보다 작은 데이터를 tempAnswer 배열에 할당하여 제거
        int count = 0;
        for(int i = 0; i < data.length; i++) {
            if(data[i][removind] < val_ext) {
                tempAnswer[count++] = data[i];
            }
        }
        
        // tempAnswer 배열에서 null 요소를 제거하고 answer 배열 생성
        int[][] answer = new int[count][];
        System.arraycopy(tempAnswer, 0, answer, 0, count);
        
        //2차원 배열로 오름차순 -2 sort_by 기준에 따라 분류용
            Arrays.sort(answer, Comparator.comparingInt((int[] o) -> o[sortIndex]));
        return answer;
    }
    public static void main(String[] args) {
        int[][] data = {{1, 20300104, 100, 80}, {2, 20300804, 847, 37}, {3, 20300401, 10, 8}};
        int[][] result = solution(data, "date", 20300501, "remain");
        
        for(int[] row : result) {
            System.out.println(Arrays.toString(row));
        }
    }
}
